model Order {
  id         String @unique @id @default(cuid())
  index      Int?
  orderItems OrderItem[]
  totalPrice Float 
  dateOfShipping      DateTime?
  dateOfEdition       DateTime?
  orderEmail           DateTime?
  shippingEmail          DateTime?
  userId     String  
  user       User @relation(fields: [userId], references: [id], onDelete: Cascade)
  shopId     String? 
  shop       Shop? @relation(fields: [shopId], references: [id])
  customer      ShippingCustomer? 
  invoiceOrder  InvoiceOrder[]
  datePickUp DateTime
  deletedAt   DateTime?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([userId])
  @@index([shopId])

}




model OrderItem {
  id           String @unique @id @default(cuid())
  itemId       String
  price        Float
  tax          Float @default(1.055) 
  quantity     Float @default(1)
  unit         String?
  name         String
  categoryName String
  description  String @db.VarChar(1000)
  orderId      String
  order        Order @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@index([orderId])
}

model ShippingCustomer {
   id              Int @unique @id @default(autoincrement())
  name            String
  company         String?
  userId          String
  shippingAddress String
  billingAddress  String
  phone           String?
  email           String
  orderId       String @unique
  order         Order @relation(fields: [orderId], references: [id],onDelete: Cascade)

  @@index([orderId])
}