import { Fragment } from "react";

import { StyleSheet, Text, View, Svg, G, Path } from "@react-pdf/renderer";
import Details from "./details";
import MainDocument, { borderColor, foregroundColor, mainColor, tableRowsCount } from "./main-document";
import type { PDFData } from "./pdf-data";

// Create Document Component
const ShippingOrder = ({ pdfData }: { pdfData: PDFData }) => (
  <MainDocument
    customer={pdfData.customer}
    title={`Bon de livraison ${pdfData.order.id}`}
    details={<Details pdfData={pdfData} title="Bon de livraison" />}
  >
    <Fragment>
      <ShippingItemsTable pdfData={pdfData} />
      <Signature dateOfShipping={pdfData.order.dateOfShipping} />
    </Fragment>
  </MainDocument>
);

export default ShippingOrder;

const itemsTableStyles = StyleSheet.create({
  tableContainer: {
    flexDirection: "row",
    flexWrap: "wrap",
    marginTop: 24,
    borderWidth: 1,
    borderColor: borderColor,
  },
});

const ShippingItemsTable = ({ pdfData }: { pdfData: PDFData }) => (
  <View style={itemsTableStyles.tableContainer}>
    <ShippingTableHeader />
    <ShippingTableRow items={pdfData.order.items} />
    <ShippingTableBlankSpace rowsCount={tableRowsCount - pdfData.order.items.length} />
  </View>
);

const tableHeaderStyles = StyleSheet.create({
  container: {
    flexDirection: "row",
    borderBottomColor: borderColor,
    backgroundColor: mainColor,
    color: foregroundColor,
    borderBottomWidth: 1,
    justifyContent: "center",
    alignItems: "center",
    height: 24,
    textAlign: "center",
    fontStyle: "bold",
    flexGrow: 1,
  },
  ref: {
    width: "40%",
    height: "100%",
    paddingTop: 4,
    borderRightColor: borderColor,
    borderRightWidth: 1,
  },
  description: {
    width: "40%",
    height: "100%",
    paddingTop: 4,
    borderRightColor: borderColor,
    borderRightWidth: 1,
  },
  qty: {
    width: "20%",
    height: "100%",
    paddingTop: 4,
  },
});

const ShippingTableHeader = () => (
  <View style={tableHeaderStyles.container}>
    <Text style={tableHeaderStyles.ref}>Reférence produit</Text>
    <Text style={tableHeaderStyles.description}>Description</Text>
    <Text style={tableHeaderStyles.qty}>Qte</Text>
  </View>
);

const tableRowStyles = StyleSheet.create({
  row: {
    flexDirection: "row",
    borderBottomColor: borderColor,
    borderBottomWidth: 1,
    paddingVertical: 2,
    alignItems: "center",
    fontStyle: "bold",
  },
  ref: {
    width: "40%",
    textAlign: "left",
    paddingLeft: 8,
    paddingRight: 8,
    flexWrap: "wrap",
  },
  description: {
    width: "40%",
    textAlign: "left",
    paddingLeft: 8,
    paddingRight: 8,
    flexWrap: "wrap",
  },

  qty: {
    width: "20%",
    textAlign: "right",
    paddingRight: 8,
  },
});

const ShippingTableRow = ({ items }: { items: PDFData["order"]["items"] }) => {
  const rows = items.map((item, i) => (
    <View style={tableRowStyles.row} key={i}>
      <Text style={tableRowStyles.ref}>{item.id}</Text>
      <Text style={tableRowStyles.description}>{item.desc}</Text>
      <Text style={tableRowStyles.qty}>{item.qty}</Text>
    </View>
  ));
  return <Fragment>{rows}</Fragment>;
};

const tableBlankSpaceStyles = StyleSheet.create({
  row: {
    flexDirection: "row",
    borderBottomColor: borderColor,
    borderBottomWidth: 1,
    alignItems: "center",
    height: 24,
    fontStyle: "bold",
    color: "white",
  },
  description: {
    width: "60%",
  },
  qty: {
    width: "10%",
  },
  rate: {
    width: "15%",
  },
  amount: {
    width: "15%",
  },
});

const ShippingTableBlankSpace = ({ rowsCount }: { rowsCount: number }) => {
  const blankRows = rowsCount > 0 ? Array(rowsCount).fill(0) : [];
  const rows = blankRows.map((x, i) => (
    <View style={tableBlankSpaceStyles.row} key={`BR${i}`}>
      <Text style={tableBlankSpaceStyles.description}>-</Text>
      <Text style={tableBlankSpaceStyles.qty}>-</Text>
      <Text style={tableBlankSpaceStyles.rate}>-</Text>
      <Text style={tableBlankSpaceStyles.amount}>-</Text>
    </View>
  ));
  return <Fragment>{rows}</Fragment>;
};

const signatureStyle = StyleSheet.create({
  container: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    marginTop: 20,
    width: "100%",
  },
  container1: {
    flexDirection: "column",
    justifyContent: "space-between",
  },
  container2: {
    flexDirection: "row",
    justifyContent: "center",
    alignItems: "center",
    gap: 10,
  },
});

const Signature = ({ dateOfShipping }: { dateOfShipping: string | null }) => (
  <View style={signatureStyle.container}>
    <View style={signatureStyle.container1}>
      <Text>Livré le : {dateOfShipping}</Text>
    </View>
    <View style={signatureStyle.container2}>
      <Text>Signature :</Text>
      <SVGSignature />
    </View>
  </View>
);

const SVGSignature = () => (
  <Svg width="284.40204mm" height="244.01469mm" viewBox="0 0 284.40204 244.01469" style={{ width: 93.24, height: 80 }}>
    <G transform="translate(-435.22965,-211.61147)">
      <Path
        style={{ fill: "#000000", stroke: "none" }}
        d="m 608.79026,211.61147 -0.26458,1.05833 -1.85208,-0.26458 c -0.31623,2.50196 0.003,4.92408 -0.21947,7.40833 -0.0601,0.67121 -0.16714,2.24478 0.78048,2.40207 0.80118,0.13298 1.09231,-1.03634 1.12835,-1.60853 0.0994,-1.57705 -0.30909,-3.18188 -0.012,-4.76229 0.28454,-1.51399 1.40398,-2.64838 1.23309,-4.23333 h -0.79375 m -144.72712,13.49375 c -0.60849,2.55585 -0.23357,5.79336 0.79375,8.20208 h 0.52916 c 1.02819,-2.04866 2.15703,-7.59048 -0.79375,-8.46667 0.2315,-0.52093 0.46903,-1.03289 0.60715,-1.58872 1.28637,-5.17645 -5.19277,-0.82713 -1.13631,1.85331 m 87.57708,15.34583 c -1.88074,3.41027 -7.36836,-2.00926 -8.29823,-3.96875 -1.15279,-2.42924 -0.003,-3.44351 2.10053,-1.61403 1.16292,1.01116 2.09028,2.09885 3.55187,2.67236 l 0.79375,-1.85208 h -0.26458 c -1.16691,0.47767 -0.62014,-1.65119 -1.14735,-2.38023 -1.42973,-1.97708 -6.43473,-5.12597 -8.20494,-2.10606 -1.25819,2.14643 -0.29264,6.03526 1.05446,7.92587 2.71104,3.80486 5.94398,6.44882 7.88073,10.84792 0.43959,0.99849 1.56688,2.32559 1.49116,3.43958 -0.12088,1.77834 -2.3921,3.85167 -3.7199,4.81946 -2.26189,1.64861 -4.28562,0.88049 -6.57518,1.9509 -1.58327,0.74022 0.0572,2.2158 1.01914,2.56212 5.61063,2.01977 11.76269,-4.56331 12.64733,-9.59706 0.3849,-2.19024 -0.76402,-5.38804 0.19231,-7.35199 0.65607,-1.34728 6.49258,-4.21502 7.60125,-2.88245 0.78437,0.94278 0.46099,2.74732 0.46099,3.88444 0,3.01471 0.45909,5.98528 0.53304,8.99583 0.0997,4.05924 0.63467,8.13933 1.12979,12.17084 0.20821,1.69531 0.70903,4.50198 -0.0827,6.08541 -1.30918,2.61835 -4.60274,4.9494 -6.56131,7.14375 -5.14219,5.76125 -7.63064,11.55972 -6.88018,19.31459 0.44755,4.62475 3.98733,11.62821 9.48009,7.66781 0.74213,-0.53509 1.44116,-1.12992 2.01357,-1.848 4.05301,-5.08444 6.18809,-14.51792 6.18851,-20.90106 2.1e-4,-3.20179 -0.90587,-7.21852 -0.15393,-10.31875 0.93542,-3.85673 4.14618,-7.21842 5.71018,-10.84792 2.33077,1.73068 3.97715,5.97667 7.32872,2.60766 0.76486,-0.76885 1.66104,-3.56708 2.73586,-3.72684 0.79789,-0.1186 1.44197,1.13856 1.84555,1.64856 1.01802,1.28648 1.94384,2.27381 3.69927,2.08747 2.8179,-0.29911 2.16474,-3.6709 4.04877,-4.74127 0.95058,-0.54005 1.90989,0.85484 2.55355,1.36252 1.12193,0.88487 2.05941,0.97633 3.45286,0.72658 2.40444,-0.43093 2.95777,-3.64373 5.03852,-4.13513 1.50982,-0.35655 2.81178,1.83569 4.2219,2.20465 2.83319,0.7413 4.28727,-1.75847 6.61071,-1.68774 1.7518,0.0533 2.60194,2.77181 4.76637,2.8549 6.30072,0.24186 11.03334,-8.15479 13.7418,-12.91478 0.96367,-1.6936 2.22002,-3.63953 2.39779,-5.60116 -3.21341,1.11545 -3.10511,5.20853 -4.90665,7.63188 -1.69721,2.28302 -4.06018,2.74797 -6.20585,4.3738 -1.23568,0.93629 -3.52986,3.67002 -5.28024,2.79955 -1.71062,-0.85071 -1.84239,-3.10998 -1.86455,-4.75107 -0.05,-3.70169 0.80234,-7.16595 0.79479,-10.84791 -0.003,-1.41395 -0.86733,-4.97192 -2.66564,-5.16836 -1.71491,-0.18732 -1.7247,3.77523 -2.04254,4.90377 -1.13536,4.0313 0.84569,8.34231 -0.30379,12.17084 -1.64341,5.47363 -5.75039,1.58926 -6.94328,-1.5875 -0.53844,-1.43386 -0.93738,-3.00873 -1.30086,-4.49792 -0.58388,-2.3921 -1.158,-4.7697 -1.82514,-7.14375 h -0.79375 c -1.01977,2.50248 -1.43267,5.247 -0.88215,7.9375 0.32714,1.59889 1.30095,3.42245 1.33273,5.02708 0.0324,1.63815 -3.09897,5.27941 -4.92483,4.81762 -1.0914,-0.27603 -1.83231,-1.75488 -2.21995,-2.70095 -2.98121,-7.27606 -1.23093,-16.38815 -1.2433,-24.07708 -0.002,-1.3195 0.22524,-7.61482 -2.10911,-6.91857 -3.05742,0.91191 -1.05814,7.50361 -0.84746,9.5644 0.29462,2.88177 -0.60995,6.09033 -0.7372,8.99583 -0.17604,4.01974 0.31154,7.92257 0.46241,11.90625 0.0511,1.34892 -1.05214,4.32742 -2.12034,5.19205 -1.4916,1.20734 -2.87597,-1.76549 -3.33873,-2.8108 -1.51118,-3.41351 -2.48625,-6.91335 -3.00125,-10.58333 -0.12324,-0.87811 -0.6674,-2.16432 -1.78778,-1.88107 -1.74791,0.4419 -1.03416,3.58702 -0.77743,4.79149 0.65965,3.09483 1.81138,10.00373 -1.82165,11.92014 -1.54621,0.81561 -2.70641,-2.46725 -3.05108,-3.45348 -0.92759,-2.65426 -0.20811,-6.40133 -0.47322,-9.26041 -0.10055,-1.08425 -0.49986,-3.07173 -1.85312,-3.22768 -1.31463,-0.15149 -2.02279,1.33821 -2.04337,2.43393 -0.0895,4.76695 1.13632,8.64995 -1.03936,13.22916 -0.42352,0.89141 -1.11535,3.47103 -2.43431,3.39529 -0.81754,-0.0469 -0.80347,-1.23234 -0.88257,-1.80779 -0.27355,-1.99027 -0.0916,-3.86412 -0.23926,-5.82083 -0.45939,-6.08545 -1.36163,-12.1556 -1.77942,-18.25625 -0.11252,-1.64313 0.73202,-5.39586 -0.33562,-6.7185 -1.35345,-1.67672 -3.01592,1.7643 -3.57228,2.48517 -1.26295,1.63638 -4.69302,4.87872 -6.96267,4.74473 -0.92611,-0.0547 -1.60116,-0.89687 -2.38227,-1.30515 m -95.77917,28.83958 c -2.21977,0.65676 -2.41325,5.23696 -4.75311,5.23696 -0.8595,0 -1.55677,-1.20556 -2.01275,-1.79737 -1.49336,-1.93822 -2.55355,-4.22051 -4.13738,-6.08542 -0.57065,-0.67191 -1.83896,-1.5777 -1.59792,-2.60092 0.2008,-0.85239 1.32563,-1.55501 1.89395,-2.1626 1.22188,-1.3063 2.42779,-2.92974 3.293,-4.4969 3.90846,-7.07947 4.63243,-14.9994 0.44831,-21.96041 -1.20439,-2.00371 -3.11337,-4.91538 -5.56972,-5.45295 -4.91551,-1.07576 -7.30836,5.55601 -8.12267,9.4217 -0.31619,1.50102 0.49053,2.76897 0.57265,4.22291 0.1489,2.63616 -0.0645,5.29474 0.11821,7.94792 0.44222,6.42149 0.21262,12.87018 0.28928,19.31458 0.0332,2.78627 -0.57532,8.2273 1.67346,10.23362 1.26246,1.12635 2.68633,-0.0696 2.78424,-1.50258 0.21073,-3.08411 -0.50985,-6.4071 -0.54795,-9.52479 -0.007,-0.60579 -0.40097,-2.9577 0.84112,-2.74342 0.99719,0.17202 2.01568,2.22805 2.51252,3.00801 1.95305,3.0659 7.57685,13.48688 10.89263,6.35 0.44486,-0.95753 0.77311,-1.88098 1.00505,-2.91042 0.34328,-1.5236 0.41708,-2.94061 0.41708,-4.49792 m -14.44876,-35.82265 c 2.77571,-1.26462 6.36157,5.05446 7.27788,6.98307 0.77366,1.62837 0.43361,3.04621 0.31542,4.7625 -0.31299,4.54496 -1.39452,8.73782 -4.14494,12.43929 -0.8756,1.17837 -2.26855,3.66108 -3.78848,4.03062 -1.84846,0.44941 -1.35068,-5.14925 -1.35068,-6.15116 0,-5.47906 -0.72593,-10.92143 -0.52427,-16.40417 0.0488,-1.32563 0.8869,-5.05503 2.21507,-5.66015 m 194.98282,10.86363 0.0882,0.17638 -0.0882,-0.17638 m -176.28355,10.68745 c -1.58996,0.2498 -1.28226,2.8494 -1.25942,3.94241 0.083,3.96977 -1.1864,8.32995 0.41585,12.18125 1.32023,3.17343 3.73417,5.8245 7.441,5.20551 1.27077,-0.2122 2.70208,-1.42683 3.96773,-1.26228 2.48339,0.32288 3.98293,2.00305 6.88019,1.17981 7.73557,-2.19803 5.46266,-16.91762 -0.79375,-19.63553 -0.98268,-0.42689 -2.31598,-1.36309 -3.42917,-1.19797 -1.05449,0.15642 -1.79329,1.40505 -2.32777,2.21671 -1.43416,2.1779 -3.14147,5.8275 -3.22359,8.46666 -0.0373,1.19741 0.69773,2.28024 0.61983,3.43959 -0.0936,1.39344 -0.86072,4.48645 -2.7518,4.08185 -1.56204,-0.3342 -2.30889,-1.98033 -2.87061,-3.2881 -1.46933,-3.4208 -0.58511,-6.99478 -0.56919,-10.58334 0.005,-1.13336 -0.18445,-5.04743 -2.0993,-4.74657 m 31.46826,6.33407 c 3.1023,-0.33454 6.86432,-1.39457 9.78959,-2.54009 0.69311,-0.27141 3.36948,-0.64658 2.7871,-1.84819 -0.60375,-1.24572 -3.35105,-0.47592 -4.3746,-0.36094 -3.93309,0.4418 -8.02114,0.65781 -11.90625,1.23818 -1.25017,0.18675 -3.04937,0.78553 -2.79752,2.43719 0.33786,2.21584 4.11212,0.15963 5.1314,1.68712 0.67762,1.01548 0.31195,2.98393 0.31195,4.14923 0,3.11726 -0.2178,9.94387 2.76976,11.93238 2.12938,1.41731 2.72773,-1.84932 2.47679,-3.20113 -0.33344,-1.79625 -1.16717,-3.49901 -1.57199,-5.29166 -0.75594,-3.3475 -0.49677,-5.34146 -2.61623,-8.20209 m -18.25625,6.61459 c -4.5383,0.30478 -0.84426,-7.31588 -0.26458,-9.78959 4.64938,0.21604 7.89546,6.54844 7.86094,10.58334 -0.008,0.91643 0.40399,1.99606 -0.0963,2.83385 -1.19725,2.00472 -6.45374,4.0573 -8.08899,1.57403 -0.81806,-1.24228 0.39033,-3.85052 0.58898,-5.20163 m 89.42896,12.10509 c 2.33105,-0.52633 1.59353,5.43093 1.5875,6.68032 -0.0238,4.93438 -1.63189,10.31948 -3.55083,14.81667 -0.67578,1.58375 -1.44678,4.04754 -3.32812,4.57795 -2.61108,0.73615 -5.16065,-5.52569 -5.28004,-7.48837 -0.33792,-5.55489 3.55492,-10.47754 6.81466,-14.55208 0.89884,-1.12351 2.26745,-3.69821 3.75683,-4.03449 M 443.16109,438.0948 c -2.21758,-0.14857 -6.4028,1.54687 -4.33827,4.45178 1.02785,1.44623 3.5269,2.325 5.13202,2.93941 7.459,2.85513 15.97584,2.47486 23.8125,2.66685 11.26422,0.27597 22.60054,0.57155 33.86667,1.06488 13.17044,0.57671 26.47345,0.88969 39.6875,1.0469 8.14146,0.0968 16.48708,-0.5174 24.60625,0.29336 2.58823,0.25846 4.3648,3.13145 6.86875,3.97671 3.89129,1.31358 9.42393,1.11896 13.50417,1.01874 6.63251,-0.16291 12.01183,-4.53322 18.25625,-5.72693 7.37681,-1.4102 15.52089,-0.38703 23.01875,-1.10345 10.49474,-1.00277 20.82906,-2.22942 31.22083,-4.11574 5.21157,-0.946 10.54865,-1.53526 15.34584,-3.93201 5.55989,-2.77781 12.57504,-5.65373 12.1594,-12.89925 -0.25141,-4.38277 -3.9986,-7.75027 -6.86774,-10.58435 -6.73744,-6.65513 -15.75637,-11.31005 -24.07708,-15.67861 -2.10733,-1.10639 -3.88655,-2.64005 -6.08542,-3.62822 -3.47366,-1.56107 -6.97092,-3.21867 -10.31875,-5.02647 -1.53986,-0.83152 -3.19483,-1.45243 -3.94507,-3.18254 -0.92566,-2.13461 -0.64987,-5.11779 -1.20613,-7.40814 -1.23468,-5.0837 -2.75713,-10.13034 -3.50063,-15.34584 -0.2442,-1.71297 0.49884,-7.00984 -1.93231,-7.12314 -2.53024,-0.11789 -2.04051,3.39256 -1.79695,5.00648 0.8515,5.64252 2.73313,11.22716 3.1272,16.93333 0.0826,1.19575 1.84029,5.78647 0.22537,6.16158 -1.32559,0.30789 -3.6417,-1.07453 -4.72981,-1.71653 -2.6418,-1.55873 -5.6484,-2.62743 -8.46667,-3.83993 -5.17465,-2.22631 -10.12784,-4.79714 -15.08125,-7.47611 -3.49517,-1.8903 -7.42277,-3.5197 -10.58333,-5.96886 -1.66745,-1.29213 -2.9246,-3.03712 -4.5016,-4.42973 -3.51161,-3.10101 -8.33339,-8.28638 -7.30441,-13.42209 0.80904,-4.03794 4.38774,-6.77757 7.83726,-8.53118 6.51795,-3.31347 13.53512,-5.43715 20.6375,-7.1415 15.84671,-3.80274 33.30908,-6.71628 49.47708,-3.66701 6.12586,1.15532 12.40842,2.60286 17.4625,6.51496 3.58628,2.77595 7.02415,6.55122 8.90295,10.70807 0.84455,1.86862 0.55726,4.90671 1.97988,6.44983 1.4513,1.57424 1.83742,-3.14965 1.80451,-3.804 -0.1329,-2.64288 -2.60052,-4.81868 -3.96836,-6.87917 -3.69309,-5.56312 -6.88543,-10.03026 -13.21689,-12.88211 -2.04084,-0.91924 -4.27042,-1.1597 -6.35,-1.90169 -8.15012,-2.90798 -16.85837,-2.55272 -25.4,-2.17709 -12.59242,0.55376 -24.77375,2.80519 -37.04167,5.87615 -7.57047,1.89509 -17.86732,4.6973 -22.89114,11.08474 -3.70459,4.71012 -2.64701,9.9671 -0.0694,14.81667 4.55094,8.56229 14.27421,13.19162 22.4314,17.58806 7.00484,3.77537 14.48655,6.58748 21.69584,9.94413 2.70826,1.26097 7.05783,2.55052 8.88107,5.01279 1.7531,2.36752 0.64409,7.99329 0.64393,10.84669 -9.1e-4,15.04556 -10.09729,29.57557 -21.43125,38.49217 -2.35031,1.84902 -5.8554,4.42553 -8.73125,5.28208 -2.07485,0.61797 -4.2305,0.28971 -6.35,0.43484 -5.20125,0.35618 -10.41747,0.50249 -15.61042,0.21233 -1.6931,-0.0946 -3.29445,-0.67059 -5.02708,-0.60798 -9.88443,0.35722 -19.74969,-0.17576 -29.63334,-0.4179 -21.31867,-0.52229 -42.89184,-1.06221 -64.29375,-1.06221 -10.10022,0 -20.39662,-0.64411 -30.42708,-1.58769 -1.78024,-0.16748 -7.59211,-0.83905 -8.3797,-2.70505 -0.41424,-0.98145 0.56016,-2.03764 0.97136,-2.85101 m 167.74584,8.46667 c 0.47752,-2.00732 2.44462,-3.33631 3.96772,-4.6 2.48428,-2.06114 4.96313,-4.32441 7.06536,-6.77708 6.06432,-7.07528 11.233,-16.47022 12.99194,-25.66459 0.69114,-3.61273 0.84581,-7.17978 0.84581,-10.84791 0,-1.29085 -0.33544,-3.25116 1.07384,-3.9563 1.15581,-0.57833 2.24382,0.6552 3.1595,1.19348 2.85903,1.68063 5.82309,3.22338 8.73125,4.81865 9.48382,5.20235 19.24856,10.34761 27.25208,17.76443 2.63104,2.43818 6.63377,5.6059 6.86754,9.54849 0.33086,5.57998 -9.20196,10.45593 -14.01129,11.50488 -14.03907,3.06201 -27.98524,4.73418 -42.33333,5.71671 -3.08367,0.21118 -6.19084,0.1952 -9.26042,0.61798 -2.05869,0.28354 -4.29967,1.15242 -6.35,0.68126 m 96.86117,-36.50515 c -1.74627,0.93515 -3.73417,4.29768 -1.77143,5.91863 0.76442,0.63131 2.13013,0.59247 3.07067,0.7231 0.87095,0.12097 1.99998,0.44879 2.79958,-0.0819 2.30919,-1.53252 -1.47918,-7.96271 -4.09882,-6.55987 m 8.19391,1.78062 c -2.70758,1.03999 0.64276,4.83446 2.85571,3.87321 2.36142,-1.02572 -0.98108,-4.59322 -2.85571,-3.87321 m -127.28008,39.48703 c -2.13291,2.44203 -7.09017,1.40631 -9.97862,1.28228 -1.48639,-0.0638 -3.03,-0.11824 -3.77971,-1.54686 3.89956,-1.23617 9.85364,-0.92191 13.75833,0.26458 z"
      />
    </G>
  </Svg>
);
